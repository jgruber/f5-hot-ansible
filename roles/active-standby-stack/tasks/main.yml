---
# Copyright (c) 2017 F5 Networks Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
- name: Manage active-standby licensed TMOS VE device pair
  os_stack:
      name: "{{ stack_name }}"
      state: "{{ state }}"
      template: "{{ template_path }}"
      parameters: 
        bigip_image: "{{ bigip_image }}"
        bigip_flavor: "{{ bigip_flavor }}"
        use_config_drive: true
        bigip_os_ssh_key: "{{ bigip_os_ssh_key }}"
        bigip_admin_pwd: "{{ bigip_admin_pwd }}"
        bigip_root_pwd: "{{ bigip_root_pwd }}"
        bigip_modules:
         - ltm:nominal
        bigip_cluster_name: sync-failover
        bigip_cluster_sync_type: sync-failover
        bigip_cluster_auto_sync: false
        bigip_cluster_save_on_auto_sync: false
        f5_bigiq_host: "{{ f5_bigiq_host }}"
        f5_bigiq_username: "{{ f5_bigiq_username }}"
        f5_bigiq_password: "{{ f5_bigiq_password }}"
        f5_bigiq_license_pool_name: "{{ f5_bigiq_license_pool_name }}"
        external_network: "{{ external_network }}"
        mgmt_network: "{{ mgmt_network }}"
        mgmt_mtu: "{{ mgmt_mtu }}"
        mgmt_security_group_name: "{{ mgmt_security_group_name }}"
        bigip_nic_count: 3
        network_vlan_names:
          - "{{ bigip_cluster_network_name }}"
          - "{{ bigip_internal_network }}"
          - "{{ bigip_external_network }}"
        network_vlan_subnets:
          - "{{ bigip_cluster_subnet_id }}"
          - "{{ bigip_internal_subnet_id }}"
          - "{{ bigip_external_subnet_id }}"
        network_vlan_security_group_rules:
          - security_group_rules:
            - rules:
              - protocol: icmp
                direction: ingress
              - protocol: icmp
                direction: egress
              - protocol: tcp
                direction: ingress
              - protocol: tcp
                direction: egress
              - protocol: udp
                direction: ingress
              - protocol: udp
                direction: egress
            - rules:
              - protocol: icmp
                direction: ingress
              - protocol: icmp
                direction: egress
              - protocol: tcp
                direction: ingress
              - protocol: tcp
                direction: egress
              - protocol: udp
                direction: ingress
              - protocol: udp
                direction: egress
            - rules:
              - protocol: icmp
                direction: ingress
              - protocol: icmp
                direction: egress
              - protocol: tcp
                direction: ingress
              - protocol: tcp
                direction: egress
              - protocol: udp
                direction: ingress
              - protocol: udp
                direction: egress
        bigip_vlan_mtus:
          - 1400
          - 1400
          - 1400
        bigip_vlan_tags:
          - None
          - None
          - None
        bigip_vlan_names:
          - HA
          - VTEP
          - external
        bigip_self_port_lockdowns:
          - allow-default
          - tcp:22;tcp:443;tcp:53;udp:53;udp:4789
          - tcp:22;tcp:54;udp:53;tcp:80;tcp:443
      environment:
        - "{{ env_file_path }}"
      timeout: 1800
      wait: yes
      auth:
        auth_url: "{{ lookup('env','OS_AUTH_URL') }}"
        username: "{{ lookup('env','OS_USERNAME') }}"
        password: "{{ lookup('env','OS_PASSWORD') }}"
        project_name: "{{ lookup('env','OS_PROJECT_NAME') }}"
  register: f5_bigip_deployment

- set_fact:
    bigip_icontrol_endpoint_slave: "{{ result[0].output_value }}"
  vars:
    query: "[?output_key=='floating_ip_slave']"
    result: "{{ f5_bigip_deployment.stack.outputs | json_query(query) }}"
  when:
    - state != "absent"

- set_fact:
    data_int_slave: "{{ result[0].output_value }}"
  vars:
    query: "[?output_key=='data_fixed_ips_slave']"
    result: "{{ f5_bigip_deployment.stack.outputs | json_query(query) }}"
  when:
    - state != "absent"

- set_fact:
    data_1_1_slave: "{{ data_int_slave[0] }}"
  when:
    - state != "absent"

- set_fact:
    data_1_2_slave: "{{ data_int_slave[1] }}"
  when:
    - state != "absent"

- set_fact:
    data_1_3_slave: "{{ data_int_slave[2] }}"
  when:
    - state != "absent"

- set_fact:
    bigip_icontrol_endpoint_master: "{{ result[0].output_value }}"
  vars:
    query: "[?output_key=='floating_ip_master']"
    result: "{{ f5_bigip_deployment.stack.outputs | json_query(query) }}"
  when:
    - state != "absent"

- set_fact:
    data_int_master: "{{ result[0].output_value }}"
  vars:
    query: "[?output_key=='data_fixed_ips_master']"
    result: "{{ f5_bigip_deployment.stack.outputs | json_query(query) }}"
  when:
    - state != "absent"

- set_fact:
    data_1_1_master: "{{ data_int_master[0] }}"
  when:
    - state != "absent"

- set_fact:
    data_1_2_master: "{{ data_int_master[1] }}"
  when:
    - state != "absent"

- set_fact:
    data_1_3_master: "{{ data_int_master[2] }}"
  when:
    - state != "absent"

- name: iControl Endpoint for Active Device
  debug: var=bigip_icontrol_endpoint_slave
  when:
    - state != "absent"

- name: iControl Endpoint for Standby Device
  debug: var=bigip_icontrol_endpoint_master
  when:
    - state != "absent"

- name: Active Interface 1.1 IP Address Allocations
  debug: var=item.ip_address
  with_items: "{{ data_1_1_slave }}"
  when:
    - state != "absent"

- name: Standby Interface 1.1 IP Address Allocations
  debug: var=item.ip_address
  with_items: "{{ data_1_1_master }}"
  when:
    - state != "absent"

- name: Active Interface 1.2 IP Address Allocations
  debug: var=item.ip_address
  with_items: "{{ data_1_2_slave }}"
  when:
    - state != "absent"
    
- name: Standby Interface 1.2 IP Address Allocations
  debug: var=item.ip_address
  with_items: "{{ data_1_2_master }}"
  when:
    - state != "absent"

- name: Active Interface 1.3 IP Address Allocations
  debug: var=item.ip_address
  with_items: "{{ data_1_3_slave }}"
  when:
    - state != "absent"

- name: Standby Interface 1.3 IP Address Allocations
  debug: var=item.ip_address
  with_items: "{{ data_1_3_master }}"
  when:
    - state != "absent"

